<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Active Admin | machty's thoughtz]]></title>
  <link href="http://machty.github.com/blog/categories/active-admin/atom.xml" rel="self"/>
  <link href="http://machty.github.com/"/>
  <updated>2014-11-15T13:12:55-05:00</updated>
  <id>http://machty.github.com/</id>
  <author>
    <name><![CDATA[Alex Matchneer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Daily Journal]]></title>
    <link href="http://machty.github.com/blog/2014/05/13/daily-journal/"/>
    <updated>2014-05-13T13:15:00-04:00</updated>
    <id>http://machty.github.com/blog/2014/05/13/daily-journal</id>
    <content type="html"><![CDATA[<h2>Sharing ignored blank password fields in ActiveAdmin</h2>

<p>I use ActiveAdmin for some stuff, and often you want to update
some resource while leaving its password the same, but if you have
a password field on the form, the form will POST with empty password
and empty confirmation you'll get a validation error from an empty
password. You can override this with a <code>controller</code> block in your
ActiveAdmin resource config via:</p>

<pre><code>controller do
  def update
    param_obj = params['admin_user']
    if param_obj[:password].blank?
      param_obj.delete("password")
      param_obj.delete("password_confirmation")
    end
    super
  end
end
</code></pre>

<p>But if you have multiple Devise-esque resources with passwords, it'd be
nice to share this with multiple resources. It's a bit tricky to solve
this with idiomatic Ruby since you're already in ActiveAdmin's DSL land,
but the following works:</p>

<p><code>/lib/admin/ignore_blank_password.rb</code>:</p>

<p>```ruby
module Admin
  module IgnoreBlankPassword</p>

<pre><code>def self.ignore(dsl)
  dsl.instance_eval do
    controller do
      def update
        param_key = resource.class.model_name.param_key.to_sym
        param_obj = params[param_key]
        if param_obj[:password].blank?
          param_obj.delete("password")
          param_obj.delete("password_confirmation")
        end
        super
      end
    end
  end
end
</code></pre>

<p>  end
end
```</p>

<p><code>/app/admin/admin_user.rb</code>:</p>

<p>```ruby
require 'admin/ignore_blank_password'
ActiveAdmin.register AdminUser do
  Admin::IgnoreBlankPassword.ignore(self)</p>

<p>  ...
end
```</p>
]]></content>
  </entry>
  
</feed>
