<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: dry | Useful Dude]]></title>
  <link href="http://machty.github.com/blog/categories/dry/atom.xml" rel="self"/>
  <link href="http://machty.github.com/"/>
  <updated>2012-09-29T12:59:50-04:00</updated>
  <id>http://machty.github.com/</id>
  <author>
    <name><![CDATA[Alex Matchneer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DRY and Tie Your Ember Routes]]></title>
    <link href="http://machty.github.com/blog/2012/09/28/dry-your-ember-routes/"/>
    <updated>2012-09-28T13:54:00-04:00</updated>
    <id>http://machty.github.com/blog/2012/09/28/dry-your-ember-routes</id>
    <content type="html"><![CDATA[<p>A common complaint about Ember.js routing is that seems to force you to
create pairs of extremely light-weight, useless Views and Controllers
for each new route you create. Another is that it's not particular
obvious how data ought to be shared between routes/controllers. Here's
one way to cut down on the seeming boilerplate while linking your data.</p>

<!--more-->


<p>Consider the following example router
that describes an application that allows you to create new Campaigns,
but the forms for filling out all the information about a Campaign are
split between multiple pages.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app_router.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">App.Router = </span><span class="nx">Em</span><span class="p">.</span><span class="nx">Router</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">root: </span><span class="nx">Em</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="c1"># ... index route, redirect-to&#39;s, etc.</span>
</span><span class='line'>
</span><span class='line'><span class="nv">new_campaign: </span><span class="nx">Em</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">route: </span><span class="s">&#39;/new_campaign&#39;</span>
</span><span class='line'>  <span class="nv">connectOutlets: </span><span class="p">(</span><span class="nx">router</span><span class="p">)</span> <span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="c1"># 1. Instantiate a NewCampaignController and NewCampaignView,</span>
</span><span class='line'>    <span class="c1"># and inject the latter into applicationController&#39;s outlet.</span>
</span><span class='line'>    <span class="c1"># also create the empty Campaign object that will be </span>
</span><span class='line'>    <span class="c1"># shared between the multiple pages of forms and pass it in</span>
</span><span class='line'>    <span class="c1"># as the context object to the controller.</span>
</span><span class='line'>    <span class="nx">router</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s">&#39;applicationController&#39;</span><span class="p">).</span><span class="nx">connectOutlet</span><span class="p">(</span><span class="s">&#39;newCampaign&#39;</span><span class="p">,</span> <span class="nx">App</span><span class="p">.</span><span class="nx">Campaign</span><span class="p">.</span><span class="nx">createRecord</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">basic_info: </span><span class="nx">Em</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>    <span class="nv">route: </span><span class="s">&#39;/basic_info&#39;</span>
</span><span class='line'>    <span class="nv">connectOutlets: </span><span class="p">(</span><span class="nx">router</span><span class="p">)</span> <span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>      <span class="c1"># 2. Create BasicInfoController and BasicInfoView, inject</span>
</span><span class='line'>      <span class="c1"># into the NewCampaignView outlet.</span>
</span><span class='line'>      <span class="nx">router</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s">&#39;newCampaign&#39;</span><span class="p">).</span><span class="nx">connectOutlet</span><span class="p">(</span><span class="s">&#39;basicInfo&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">more_info: </span><span class="nx">Em</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>    <span class="nv">route: </span><span class="s">&#39;/more_info&#39;</span>
</span><span class='line'>    <span class="nv">connectOutlets: </span><span class="p">(</span><span class="nx">router</span><span class="p">)</span> <span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">router</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s">&#39;newCampaign&#39;</span><span class="p">).</span><span class="nx">connectOutlet</span><span class="p">(</span><span class="s">&#39;moreInfo&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">#... a third page</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>There's two main problems with the code above:</p>

<ol>
<li>The <code>basic_info</code> and <code>more_info</code> child state controllers haven't yet
been connected to the Campaign object created for the parent
<code>new_campaign</code> state.</li>
<li>Already, you've got to implement a bunch of nearly empty Views and
Controllers, namely:</li>
</ol>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app_router.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">App.NewCampaignView = </span><span class="nx">Em</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">templateName: </span><span class="s">&quot;new_campaign&quot;</span>
</span><span class='line'><span class="nv">App.NewCampaignController = </span><span class="nx">Em</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">extend</span><span class="p">()</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nv">App.BasicInfoView = </span><span class="nx">Em</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">templateName: </span><span class="s">&quot;basic_info&quot;</span>
</span><span class='line'><span class="nv">App.BasicInfoController = </span><span class="nx">Em</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">extend</span><span class="p">()</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nv">App.MoreInfoView = </span><span class="nx">Em</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">templateName: </span><span class="s">&quot;more_info&quot;</span>
</span><span class='line'><span class="nv">App.MoreInfoController = </span><span class="nx">Em</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">extend</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>First off, if you're a 1-to-1 class-to-file kind of person, your
codebase, app namespace, and editor tab space will bloat with nearly
empty View and Controller definitions. Sucks.</p>

<p>Fortunately, if the <code>connectOutlet</code> function comes in all sorts of
flavors, one where you you can pass in an options hash rather than
a string to specify exactly which Views / Controllers to create and what
your context option should be. Let us kill off the <code>BasicInfo</code>- and <code>MoreInfo</code>-
Controllers via the following:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nv">App.Router = </span><span class="p">...</span><span class="o">&lt;/</span><span class="nx">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>  <span class="nv">basic_info: </span><span class="nx">Em</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>    <span class="nv">connectOutlets: </span><span class="p">(</span><span class="nx">router</span><span class="p">)</span> <span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">router</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s">&#39;new_campaign&#39;</span><span class="p">).</span><span class="nx">connectOutlet</span>
</span><span class='line'>        <span class="nv">viewClass: </span><span class="nx">App</span><span class="p">.</span><span class="nx">BasicInfoView</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">more_info: </span><span class="nx">Em</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>    <span class="nv">connectOutlets: </span><span class="p">(</span><span class="nx">router</span><span class="p">)</span> <span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">router</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s">&#39;new_campaign&#39;</span><span class="p">).</span><span class="nx">connectOutlet</span>
</span><span class='line'>        <span class="nv">viewClass: </span><span class="nx">App</span><span class="p">.</span><span class="nx">MoreInfoView</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Turns out we've actually solved both problems: we no longer need
<code>BasicInfoController</code> or <code>MoreInfoController</code>, and we've actually
tied the templates for <code>BasicInfoView</code> and <code>MoreInfoView</code> correctly
to the Campaign object in NewCampaignController, and how exactly does
that work?</p>

<h3>Default Context Resolution: parentView</h3>

<p>Well, ever since
<a href="https://gist.github.com/2494968">Ember changed the way it resolves contexts</a>,
the context of a template is determined, by default, by looking up the
<code>controller</code> property of the View and using that if it exists, otherwise
it checks up the chain of <code>parentView</code>s to see if any of them have
defined a <code>controller</code> property to use as the context. <code>BasicInfoView</code>
and <code>MoreInfoView</code> don't have controllers set (since we're using the
<code>viewClass</code>-only form of <code>connectOutlet</code>), so their contexts resolve to
their <code>parentView</code>'s <code>controller</code>, namely <code>NewCampaignController</code>.
Therefore, the Handlebars templates for <code>BasicInfoView</code> and
<code>MoreInfoView</code> now use the <code>Campaign</code> object as their context.</p>

<h3>Can we do better?</h3>

<p>You might be itching to get rid of <code>BasicInfo-</code> and <code>MoreInfoView</code> as
well, since all they do is specify their <code>templateName</code>. You could do
this, if you wanted, by doing
<code>viewClass: Em.View.extend(templateName: "basic_info")</code>, but that seems
like overkill to me. Plus, you'd lose the benefits of being able to,
say, automatically focus a text field via the View's <code>didInsertElement</code>
hook.</p>

<h3>Where can I learn more?</h3>

<p>Documentation on Ember routing is still pretty meager, so I'd definitely
encourage you to really dig into the Ember source, particularly the test
cases that deal with these kinds of issues. For example, tucked right in
the middle of <code>controller_test.js</code> is</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app_router.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">test</span><span class="p">(</span><span class="s2">&quot;if the controller is explicitly set to null while connecting an outlet, the instantiated view will inherit its controller from its parent view&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="p">...</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Which isn't exactly what's happening regarding context resolution, but still clued me into this
approach.</p>
]]></content>
  </entry>
  
</feed>
